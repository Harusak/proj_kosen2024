"0","# `data/raw/experiment_main` から実験データを読み込む"
"0","# * 実験データは参加者ごとにファイルが分かれている"
"0",""
"0","# CSVファイルが格納されているディレクトリのパスを指定"
"0","strCsvPath <- here(""data/raw/experiment_main"")"
"0",""
"0","# 指定したディレクトリ内のすべてのCSVファイルのパスを取得"
"0","fileNames <- list.files(strCsvPath, pattern = "".csv$"", full.names = TRUE)"
"0",""
"0","# データを格納するためのデータフレームを初期化"
"0","dfRAW <- data.frame()"
"0",""
"0","# 全ての参加者実験ファイルを一つのデータフレームに統合する"
"0","# fileNames内のファイルごとにループ処理を行い、各CSVファイルを読み込む"
"0","for (file in fileNames) {"
"0","  # CSVファイルを読み込み、特定の列を削除し、新しいフラグ列を追加する"
"0","  # flag:1 データを除外閾値に引っかかったラベル．後々除外．"
"0","  singleCsvData <- read.csv(file) |>"
"0","    # `trialID`, `month`, `date` 列を除去"
"0","    select(-trialID, -month, -date) |>"
"0","    # `breakTime`が 999 以上または 0.1 以下、または `ans` が ""FALSE"" の場合、フラグを1に設定"
"0","    mutate(flag = if_else(breakTime >= 999 | breakTime <= 0.1 | ans == ""FALSE"", 1, 0))"
"0",""
"0","  # フラグが0(= 除外されない) のデータに基づいて、breakTime の平均と標準偏差を計算"
"0","  tmp <- singleCsvData |>"
"0","    # `flag == 0` の行のみをフィルタリング"
"0","    dplyr::filter(flag == 0) |>"
"0","    # `breakTime` の平均 (md) と標準偏差 (sd) を計算"
"0","    summarise("
"0","      md = mean(breakTime, na.rm = TRUE),"
"0","      sd = sd(breakTime, na.rm = TRUE)"
"0","    )"
"0",""
"0","  # 元のフラグを尊重しつつ、全行に対して外れ値の検出を適用"
"0","  singleCsvData <- singleCsvData |>"
"0","    # フラグが1の行はそのままNAとし、それ以外の行に外れ値検出を適用"
"0","    mutate(outlier = if_else(flag == 1, NA, # フラグが1の行はNAに設定"
"0","                             if_else(breakTime <= tmp$md - 3 * tmp$sd |"
"0","                                       breakTime >= tmp$md + 3 * tmp$sd, 1, 0))) # 3シグマから外れる行を外れ値としてフラグ付け"
"0",""
"0","  # 加工したデータを元のデータフレームに追加"
"0","  dfRAW <- rbind(dfRAW, singleCsvData)"
"0","}"
